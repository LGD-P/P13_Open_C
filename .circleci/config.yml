# This config was automatically generated from your source code
# Stacks detected: deps:python:.,file:manage.py:.,package_manager:poetry:.
version: 2.1

orbs:
  python: circleci/python@2

jobs:
  coverage:
    # Install dependencies and run tests
    docker:
      - image: cimg/python:3.11.6
    steps:
      - checkout
      - python/install-packages: 
        pkg-manager: poetry

      - run:
          name: Run tests 
          command: poetry run pytest --cov=. > cov-report.txt 

      - run:
          name: Check coverage # circleci step halt stop build if failed
          command: |
            cov_result=$(grep -w 'TOTAL' cov-report.txt | awk '{print $NF}' | tr -d '%')
            if [ "$cov_result" -gt 80 ]; then
              echo 'Tests cover more than 80% of your project'
            else
              echo 'Fail: Tests cover less than 80% of your project'
              circleci step halt
            fi 

  flake8:
    # Install dependencies and run tests
    docker:
      - image: cimg/python:3.11.6
    steps:
      - checkout
      - python/install-packages: 
        pkg-manager: poetry

      - run: 
          name: flake8 
          command: poetry run flake8
          

  build-publish:
    # This is an example deploy job, not actually used by the workflow
    docker:
      - image: nplgdjp/oc-lettings-repo:latest
    steps:
      - checkout
      - run: 
          name: login and build
          command: |
            docker login -u ${DOCKER_USER} -p ${DOCKER_TOKEN}
            echo 'You are logged'
            docker build -t oc-lettings-docker-build .
            echo 'image built'
          
      - run:
          name: push
          command: |
            docker tag oc-lettings-docker-build:latest nplgdjp/oc-lettings-repo:latest
            docker push nplgdjp/oc-lettings-repo:latest
            echo 'image pushed'

workflows:
  build-and-test:
    jobs:
      - coverage
      - flake8
      - build-publish:
          requires:
            - coverage
            - flake8
          filters:
            branches:
              only: master # The build-publish job will only run on the 'master' branch
          
            

            